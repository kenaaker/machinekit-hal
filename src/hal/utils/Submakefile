HALCMDSRCS := hal/utils/halcmd.c hal/utils/halcmd_main.c
HALCMDCCSRCS := hal/utils/halcmd_rtapiapp.cc

ifneq ($(READLINE_LIBS),)
HALCMDSRCS += hal/utils/halcmd_completion.c
endif
USERSRCS += $(sort $(HALCMDSRCS) $(HALCMDCCSRCS))

$(call TOOBJSDEPS, $(HALCMDCCSRCS)) : EXTRAFLAGS =  \
	$(PROTOBUF_CFLAGS) $(CZMQ_CFLAGS) -fPIC

LIBHALCMDSRCS := \
	hal/utils/halcmd.c \
	hal/utils/halcmd_commands.c \
	hal/utils/halcmd_rtapiapp.cc
USERSRCS += $(LIBHALCMDSRCS)
$(call TOOBJSDEPS, $(LIBHALCMDSRCS)): EXTRAFLAGS += -fPIC

LIBHALCMD := ../lib/libhalcmd.so
$(LIBHALCMD).0: $(call TOOBJS, $(LIBHALCMDSRCS)) \
	../lib/libmkini.so.0 \
	../lib/libhal.so.0 \
	../lib/libhalulapi.so.0 \
	../lib/libmachinetalk-pb2++.so.0 \
	../lib/libmtalk.so.0 \
	../lib/librtapi_math.so.0
	$(ECHO) Creating shared library $(notdir $@)
	@mkdir -p ../lib
	@rm -f $@
	$(Q)$(CC) $(SYSROOT_FLAGS) $(LDFLAGS) \
	    -Wl,-soname,$(notdir $@) -shared \
	    -o $@ $^ -lstdc++ -ldl -lrt $(PROTOBUF_LIBS) $(PROTOCXXLIB) $(CZMQ_LIBS) \
	    -L../lib \
	    -lhal \
	    -lhalulapi \
	    -lrtapi_math \
	    -lmachinetalk-pb2++ \
	    -lmkini \
	    -llinuxcncshm

TARGETS += $(LIBHALCMD) $(LIBHALCMD).0

../bin/halcmd: $(call TOOBJS, $(HALCMDSRCS))  $(call TOOBJS, $(HALCMDCCSRCS)) \
	../lib/libmkini.so.0 \
	../lib/libhal.so.0 \
	../lib/libhalulapi.so.0 \
	../lib/libmachinetalk-pb2++.so.0 \
	../lib/libmtalk.so.0 \
	../lib/librtapi_math.so.0 \
	$(LIBHALCMD)
	$(ECHO) Linking $(notdir $@)
	$(Q)$(CC) $(SYSROOT_FLAGS) $(LDFLAGS) -o $@ $^ $(READLINE_LIBS) \
	$(PROTOBUF_LIBS) $(CZMQ_LIBS) $(AVAHI_LIBS) -lm -lstdc++ \
	-L../lib \
	-lhal \
	-lhalulapi \
	-lrtapi_math \
	-lmachinetalk-pb2++ \
	-lmkini \
	-llinuxcncshm
	
TARGETS += ../bin/halcmd

ifdef TARGET_PLATFORM_SOCFPGA
HM2UTILRCS := hal/utils/mksocmemio.c
$(call TOOBJSDEPS, $(HM2UTILRCS)) : EXTRAFLAGS = -Wall -Werror -std=c99
USERSRCS += $(HM2UTILRCS)
../bin/mksocmemio: $(call TOOBJS, $(HM2UTILRCS))
	$(ECHO) Linking $(notdir $@)
	@mkdir -p $(dir $@)
	$(Q)$(CC) $(SYSROOT_FLAGS) $(LDFLAGS) -g -Wall -o $@ $^
TARGETS += ../bin/mksocmemio
endif

ifdef HAVE_GTK
HALMETERSRCS := \
    hal/utils/meter.c \
    hal/utils/miscgtk.c

USERSRCS += $(HALMETERSRCS)

../bin/halmeter: \
		$(call TOOBJS, $(HALMETERSRCS)) \
		../lib/libhal.so.0 \
		../lib/libhalulapi.so.0 \
		../lib/libmachinetalk-pb2++.so.0
	$(ECHO) Linking $(notdir $@)
	$(Q)$(CC) $(SYSROOT_FLAGS) $(LDFLAGS) -o $@ $^  $(GTK_LIBS) \
	-L../lib \
	-lhal \
	-lhalulapi \
	-lrtapi_math \
	-lmachinetalk-pb2++ \
	-lmkini \
	-llinuxcncshm
	
TARGETS += ../bin/halmeter

HALSCOPESRCS := \
    hal/utils/scope.c \
    hal/utils/scope_horiz.c \
    hal/utils/scope_vert.c \
    hal/utils/scope_trig.c \
    hal/utils/scope_disp.c \
    hal/utils/scope_files.c \
    hal/utils/miscgtk.c

USERSRCS += $(HALSCOPESRCS)

../bin/halscope: $(call TOOBJS, $(HALSCOPESRCS)) \
		../lib/libhal.so.0 \
		../lib/libhalulapi.so.0 \
		../lib/libmachinetalk-pb2++.so.0 \
		../lib/librtapi_math.so.0
	$(ECHO) Linking $(notdir $@)
	$(Q)$(CC) $(SYSROOT_FLAGS) $(LDFLAGS) -o $@ $^ $(GTK_LIBS) \
	-L../lib \
	-lhal \
	-lhalulapi \
	-lrtapi_math \
	-lmachinetalk-pb2++ \
	-lmkini \
	-llinuxcncshm
	
TARGETS += ../bin/halscope

HALGTKSRCS := \
    hal/utils/scope.c \
    hal/utils/scope_horiz.c \
    hal/utils/scope_vert.c \
    hal/utils/scope_trig.c \
    hal/utils/scope_disp.c \
    hal/utils/scope_files.c \
    hal/utils/meter.c \
    hal/utils/miscgtk.c
$(call TOOBJSDEPS, $(HALGTKSRCS)) : EXTRAFLAGS = $(GTK_CFLAGS)
$(call TOOBJS, $(HALGTKSRCS)): Makefile.inc
endif

ifeq ($(BUILD_DRIVERS),yes)
ifeq ($(HAS_SYS_IO),yes)
# normal
#PCI_DEBUG_FLAGS =
# debug build for now
PCI_DEBUG_FLAGS = -DDEBUG_PRINTS

PCIWRITESRCS := hal/utils/pci_write.c hal/utils/upci.c
$(call TOOBJSDEPS, $(PCIWRITESRCS)) : EXTRAFLAGS = $(PCI_DEBUG_FLAGS)
USERSRCS += $(PCIWRITESRCS)
../libexec/pci_write: $(call TOOBJS, $(PCIWRITESRCS))
	$(ECHO) Linking $(notdir $@)
	@mkdir -p $(dir $@)
	$(Q)$(CC) $(SYSROOT_FLAGS) $(LDFLAGS) -o $@ $^ \
	-L../lib \
	-lhal \
	-lhalulapi \
	-lrtapi_math \
	-lmachinetalk-pb2++ \
	-lmkini \
	-llinuxcncshm
	
TARGETS += ../libexec/pci_write

PCIREADSRCS := hal/utils/pci_read.c hal/utils/upci.c
$(call TOOBJSDEPS, $(PCIREADSRCS)) : EXTRAFLAGS = $(PCI_DEBUG_FLAGS)
USERSRCS += $(PCIREADSRCS)
../libexec/pci_read: $(call TOOBJS, $(PCIREADSRCS))
	$(ECHO) Linking $(notdir $@)
	@mkdir -p $(dir $@)
	$(Q)$(CC) $(SYSROOT_FLAGS) $(LDFLAGS) -o $@ $^
TARGETS += ../libexec/pci_read

endif
endif

../bin/comp ../bin/instcomp: ../bin/%: objects/hal/utils/%.py
	@$(ECHO) Syntax checking python script $(notdir $@)
	$(Q)$(PYTHON) -c 'import sys; compile(open(sys.argv[1]).read(), sys.argv[1], "exec")' $<
	$(ECHO) Copying python script $(notdir $@)
	$(Q)(echo '#!$(PYTHON)'; sed '1 { /^#!/d; }' $<) > $@.tmp && chmod +x $@.tmp && mv -f $@.tmp $@

../bin/halcompile:
	@$(ECHO) Creating halcompile symlink for LCNC compitibility
	$(Q)ln -sf comp $@

TARGETS += ../bin/comp ../bin/instcomp ../bin/halcompile
objects/%.py: %.g
	@mkdir -p $(dir $@)
	$(ECHO) Parsing python $<
	$(Q)$(YAPPS2) $< $@

# C language components
$(eval $(call c_comp_build_rules,hal/utils/scope_rt.o))
